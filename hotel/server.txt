import java.rmi.*;
import java.rmi.registry.LocateRegistry;
import java.rmi.server.UnicastRemoteObject;
import java.util.HashMap;

// Interface implementation is embedded here
public class HotelServer extends UnicastRemoteObject implements HotelInterface {
    private HashMap<String, String> bookings;

    public HotelServer() throws RemoteException {
        bookings = new HashMap<>();
    }

    public synchronized String bookRoom(String guestName) throws RemoteException {
        if (bookings.containsKey(guestName)) {
            return "Guest " + guestName + " already has a booking.";
        } else {
            bookings.put(guestName, "Booked");
            return "Room booked for " + guestName;
        }
    }

    public synchronized String cancelBooking(String guestName) throws RemoteException {
        if (bookings.containsKey(guestName)) {
            bookings.remove(guestName);
            return "Booking cancelled for " + guestName;
        } else {
            return "No booking found for " + guestName;
        }
    }

    public static void main(String[] args) {
        try {
            LocateRegistry.createRegistry(1099); // Start RMI Registry
            HotelServer hotel = new HotelServer(); // Create object
            Naming.rebind("HotelService", hotel); // Bind to registry
            System.out.println("Hotel Server is ready...");
        } catch (Exception e) {
            System.out.println("Server Exception: " + e.getMessage());
            e.printStackTrace();
        }
    }
}